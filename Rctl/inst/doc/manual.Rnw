%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Danny Arends
% The ctl mapping routine
%\VignetteIndexEntry{Manual}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass[12pt]{article}

\usepackage{times}
\usepackage{amsmath}
\usepackage{url}
\usepackage{color}

% revise margins
\setlength{\headheight}{0.0in}
\setlength{\topmargin}{-0.25in}
\setlength{\headsep}{0.0in}
\setlength{\textheight}{9.00in}
\setlength{\footskip}{0.5in}
\setlength{\oddsidemargin}{0in}
\setlength{\evensidemargin}{0in}
\setlength{\textwidth}{6.5in}

\setlength{\parskip}{6pt}
\setlength{\parindent}{0pt}

\newcommand{\code}{\texttt}
\newcommand{\lod}{\text{LOD}}

% make "Figure" within figure captions a small font
\renewcommand{\figurename}{\small Figure}

\begin{document}

\SweaveOpts{prefix.string=fig}
\setkeys{Gin}{width=\textwidth} %% <- change width of figures
% Try to get the R code from running into the margin
<<echo=FALSE>>=
options(width=87, digits=3, scipen=4)
set.seed(61777369)
@ 

% Change S input/output font size
\DefineVerbatimEnvironment{Sinput}{Verbatim}{fontsize=\footnotesize, baselinestretch=0.75, formatcom = {\color[rgb]{0, 0, 0.56}}}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{fontsize=\footnotesize, baselinestretch=0.75, formatcom = {\color[rgb]{0.56, 0, 0}}}

\begin{center}
\vspace*{1in}
\textbf{\Large CTL mapping in R }
 
\bigskip \bigskip 
\bigskip \bigskip 
 
{\large Danny Arends, and Ritsert C. Jansen} 

\bigskip \bigskip

{\color{blue} \tt \bfseries University of Groningen \\
Groningen Bioinformatics centre \& GCC \\
revision \# 1 \\[24pt]
XX Okt 2011}

\end{center}

\bigskip \bigskip

\textbf{\sffamily Abstract}: Correlated Trait Loci (CTL) mapping using the R package 'ctl'
\vfill

\noindent \emph{email}: \verb|Danny.Arends@Gmail.com|
\newpage

\textbf{\sffamily Some words in advance}
\nopagebreak

Welcome reader to this tutorial, you'll be thrown into the world of network reconstruction 
using differential correlations. This methodology CTL mapping is not the easiest but the 
results can be of great help unraveling trait to trait interactions in all types of 
eukaryotes. In this tutorial I'll try to use as few difficult concepts as possible. But
some always $sneak$ in.\\
\\
Enjoy this tutorial, and good luck hunting that heritability.\\
Danny Arends\\
\\
PS. Use a text-editor\\
PPS. Use a repository/backup system

\bigskip

\textbf{\sffamily Background \& Methodology}
\nopagebreak

Some introduction on the methodology, skip this chapter first (Do come back later) if you 
have a dataset and just want to use the software.

\bigskip 

\textbf{\sffamily Format and load your data}
\nopagebreak

\emph{Loading your Excel / CSV data}\\
Use the example excel file and simply replace the example data by your own then: 
  $$File->Save As->TODO$$

After you have stored the data as plain text open the files in a text editor (NOT WORD, for 
windows Notepad++ is a good option) and check to see if your data is stored correctly, if 
not reformat your data in both the genotype.csv and the phenotype.csv files to match the 
following:

<<echo=TRUE,eval=FALSE>>=
setwd("<PATH_TO_DATA>")
genotypes <- read.csv("genotypes.csv",row.names=1,col.names=TRUE)
traits <- read.csv("traits.csv",row.names=1,col.names=TRUE)
genotypes[1:5,1:10] #Show the first 5 individuals, 10 markers
traits[1:5,1:10] #Show the first 5 individuals, 10 traits
@

\emph{Use an R/qtl formatted dataset}\\
Provided is the main interface functions to R/qtl: $CTLscan.cross()$ this functions accepts and 
R/qtl formatted cross object as input and will scan CTL, perform permutations and transform the
detected differential correlation to LOD score matrices.
As an example we show the code to scan the multitrait dataset provided in R/qtl:

<<echo=TRUE,eval=FALSE>>=
require(qtl)        #load the R/qtl package
data(multitrait)    #load the dataset
ctls <- CTLscan.cross(multitrait, pheno.col=1:2)
@


\bigskip

\textbf{\sffamily CTLscan and CTLscan.network}
\nopagebreak

Explains how to map CTL using the CTLscan and CTLscan.network functions.

\emph{CTLscan options}
The genotype matrix and the $geno.enc$ param, the phenotype matrix, the important $n.perms$ param, 
which should be set to as many as possible, especially when publishing any results, but for a quick 
scan 100 is ussualy sufficient.

When experimental setups are more complex a user can supply QTL results via the $have.qtl$ option. 

<<echo=TRUE,eval=FALSE>>=
require(qtl)        #load the R/qtl package
data(multitrait)    #load the dataset
qtls <- scanone(multitrait, pheno.col=1:24)[,-c(1,2)]
ctls <- CTLscan.cross(multitrait, pheno.col=1:2, have.qtl=qtls)
@

, when no qtls are supplied the internal QTL mapping routine is used, which can deal with just a 
single condition per individual. An environmental condition can be specified by the $conditions$ 
param and are also passed to the internal QTL mapping algorithm.

<<echo=TRUE,eval=FALSE>>=
#Specify that individuals 1:81 were in condition A / e.g. treatment
#Specify that individuals 82:162 were in condition B / e.g. control
conditions <- c(rep(1,81),rep(2,81))
ctls <- CTLscan(ath.metab$genotypes, ath.metab$phenotypes, conditions=)
@


\bigskip
\textbf{\sffamily Advanced plots and CTL networks}
\nopagebreak

Some more advanced topics

\bigskip
\textbf{\sffamily Big data and Dctl}
\nopagebreak

Explains how to use the D version to map big datsets

\bigskip
\textbf{\sffamily Significance using CTLpermute}
\nopagebreak

Explains how to determine CTL significance using the CTLpermute function.


\newpage
{\small
\noindent \textbf{\sffamily Package CTL function overview} \\
\noindent \begin{tabular}{ll} 
\hspace*{25mm} & \hspace*{103mm} \\ \hline
CTLscan & Main function for Genome wide scan for Correlated Trait Loci \\
CTLscan.network & Scan only a subset of traits for CTL using start gene(s) \\
CTLpermute & Significance thresholds for CTL by permutation\\
plot & Plot CTL profiles at increasing cut-offs \\
image & Image a multiple phenotype scan \\
\hline
\end{tabular}
}

\end{document}
